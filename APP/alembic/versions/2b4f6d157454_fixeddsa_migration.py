"""fixeddsa migration

Revision ID: 2b4f6d157454
Revises: 
Create Date: 2025-04-29 10:35:08.990620

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2b4f6d157454'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('previous_schools',
    sa.Column('previousSchool_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('previousSchool_id')
    )
    op.create_index(op.f('ix_previous_schools_name'), 'previous_schools', ['name'], unique=False)
    op.create_index(op.f('ix_previous_schools_previousSchool_id'), 'previous_schools', ['previousSchool_id'], unique=False)
    op.create_table('college_students',
    sa.Column('stud_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('course', sa.String(length=50), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('strand', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('province', sa.String(length=255), nullable=True),
    sa.Column('barangay', sa.String(length=255), nullable=True),
    sa.Column('full_address', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('cluster', sa.Integer(), nullable=True),
    sa.Column('previous_school_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['previous_school_id'], ['previous_schools.previousSchool_id'], ),
    sa.PrimaryKeyConstraint('stud_id')
    )
    op.create_index(op.f('ix_college_students_stud_id'), 'college_students', ['stud_id'], unique=False)
    op.create_table('courses',
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('campus_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['campus_id'], ['campuses.campus_id'], ),
    sa.PrimaryKeyConstraint('course_id'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_courses_course_id'), 'courses', ['course_id'], unique=False)
    op.create_table('senior_high_students',
    sa.Column('stud_id', sa.Integer(), nullable=False),
    sa.Column('year', sa.Integer(), nullable=True),
    sa.Column('strand', sa.String(length=50), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('province', sa.String(length=100), nullable=True),
    sa.Column('barangay', sa.String(length=255), nullable=True),
    sa.Column('full_address', sa.String(length=255), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('cluster', sa.Integer(), nullable=True),
    sa.Column('previous_school_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['previous_school_id'], ['previous_schools.previousSchool_id'], ),
    sa.PrimaryKeyConstraint('stud_id')
    )
    op.create_index(op.f('ix_senior_high_students_stud_id'), 'senior_high_students', ['stud_id'], unique=False)
    op.create_table('user_activity_logs',
    sa.Column('log_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('activity_type', sa.String(length=50), nullable=False),
    sa.Column('target_table', sa.String(length=100), nullable=False),
    sa.Column('file_name', sa.String(length=255), nullable=True),
    sa.Column('record_count', sa.Integer(), nullable=True),
    sa.Column('file_size', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.user_id'], ),
    sa.PrimaryKeyConstraint('log_id')
    )
    op.create_index(op.f('ix_user_activity_logs_log_id'), 'user_activity_logs', ['log_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_activity_logs_log_id'), table_name='user_activity_logs')
    op.drop_table('user_activity_logs')
    op.drop_index(op.f('ix_senior_high_students_stud_id'), table_name='senior_high_students')
    op.drop_table('senior_high_students')
    op.drop_index(op.f('ix_courses_course_id'), table_name='courses')
    op.drop_table('courses')
    op.drop_index(op.f('ix_college_students_stud_id'), table_name='college_students')
    op.drop_table('college_students')
    op.drop_index(op.f('ix_previous_schools_previousSchool_id'), table_name='previous_schools')
    op.drop_index(op.f('ix_previous_schools_name'), table_name='previous_schools')
    op.drop_table('previous_schools')
    # ### end Alembic commands ###
